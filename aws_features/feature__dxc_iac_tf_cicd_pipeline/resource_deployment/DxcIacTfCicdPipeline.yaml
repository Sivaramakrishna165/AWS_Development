AWSTemplateFormatVersion: 2010-09-09
Description: CI/CD pipeline to deploy Terraform files in same/cross region/account for github projects.
Parameters:
  BuildPlatform:
    Type: String
    Default: 'AMAZON_LINUX_2'
    Description: "[Change ONLY if required] Code build docker container platform"
  BuildPlatformVersion:
    Type: String
    Default: 'Amazon Linux 2023'
    Description: "[Change ONLY if required] Code build docker container platform version"
  BuildPlatformArch:
    Type: String
    Default: 'x86_64'
    Description: "[Change ONLY if required] Code build docker container platform arch"
  BuildPlatformLang:
    Type: String
    Default: 'STANDARD'
    Description: "[Change ONLY if required] Code build docker container platform Language"
  pCommonIncidentTopic:
    Description: SSM Param to create the Incidents in Service-Now with priroity fetched from DDB - FtCloudWatchAlarmsIncidentPriorities
    Type: "AWS::SSM::Parameter::Value<String>" 
    Default: /DXC/Alarms/CreateIncident-Default
  CrossAccountRole:
    Type: String
    Description: Cross account role for deploying Terraform files in target account.
    Default: ''
  ApplyBuildFile:
    Type: String
    Default: 'buildspec/apply-buildspec.yaml'
    Description: "Buildspec file to run during the pipeline build stage"
  PlanBuildFile:
    Type: String
    Default: 'buildspec/plan-buildspec.yaml'
    Description: "Buildspec file to run during the pipeline build stage"
  AWSServices:
    Type: String
    Default: ''
    Description: "AWS services/resources to be created/updated as part of CICD pipeline. Eg. s3,iam,logs"
  AWSRegion:
    Type: String
    Default: ''
    Description: "AWS Region to deploy the IaC terraform scripts. Default is Offerings deployed region. Eg. us-east-1"
  pFeatureVersion:
    Type: String
    Default: 'None'
    Description: "[DO NOT CHANGE] Version of the Feature. To be Filled by creating/parent stack"
  pDXCS3KeyPrefix:
    Type: String
    Default: 'None'
    Description: "[DO NOT CHANGE] S3 path to the Lambda_functions of Feature. To be Filled by creating/parent stack"
  pDXCS3BucketName:
    Type: "AWS::SSM::Parameter::Value<String>" 
    Default: /DXC/SES/Module/DxcIacTfCicdPipeline/S3AssetBucket
    Description: "[DO NOT CHANGE] SSM Parameter for bucket location"
  GitHubRepository:
    Type: String
    Default: ''
  GitHubBranch:
    Type: String
    Default: ''
  CodeStarConnectionARN:
    Type: String
    Description: Enter the connection ARN
    Default: ''
  ManualApproval:
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'Yes'
    Description: >-
      Require manual approval before deploying terraform scripts, will email Primary
      Email and (optionally) Secondary Email specified in the Email Notification
      Settings section
    Type: String
  EmailPrimary:
    Default: ''
    Description: 'Primary email to notify for pending manual approvals and pipeline execution notifications'
    Type: String
  EmailSecondary:
    Default: ''
    Description: 'Secondary email to notify for pending manual approvals and pipeline execution notifications'
    Type: String

Conditions:
  AWSRegion: !Not 
    - !Equals 
      - !Ref AWSRegion
      - !Sub '${AWS::Region}'
  CrossAccountRole: !Not
    - !Equals
      - !Ref CrossAccountRole
      - ''
  ManualApproval: !Equals 
    - !Ref ManualApproval
    - 'Yes'
  EmailPrimary: !Not 
    - !Equals 
      - !Ref EmailPrimary
      - ''
  EmailSecondary: !Not 
    - !Equals 
      - !Ref EmailSecondary
      - ''

Resources:

  rCodeBuildEnvImage:
    Type: Custom::CodeBuildEnvImage
    Properties:
      Description: "Execute the Lambda function dxc-awsms-cicd-get-latest-image"
      ServiceToken: !Join ["", ["arn:aws:lambda:", !Ref "AWS::Region", ":", !Ref "AWS::AccountId", ":function:dxc-awsms-cicd-get-latest-image"] ]
      platform : !Ref BuildPlatform
      arch : !Ref BuildPlatformArch
      language : !Ref BuildPlatformLang
      version: !Ref BuildPlatformVersion

  rCicdTfStateLockDdbTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        - AttributeName: "LockID"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "LockID"
          KeyType: "HASH"
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: True
      SSESpecification:
        SSEEnabled: true
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      Tags:
        - Key: "Purpose"
          Value: !Sub "DXC CICD - Terraform state Lock ID - ${AWS::StackName}"
      
  cicdApprovalSNSTopic:
    Condition: ManualApproval
    Type: 'AWS::SNS::Topic'
    Properties:
      Subscription:
        - !If 
          - EmailPrimary
          - Endpoint: !Ref EmailPrimary
            Protocol: email
          - !Ref 'AWS::NoValue'
        - !If 
          - EmailSecondary
          - Endpoint: !Ref EmailSecondary
            Protocol: email
          - !Ref 'AWS::NoValue'

  rCicdTfCreateUpdateServicePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: !Sub 'DXC-CICD-${AWS::StackName}'
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Sid: "AWSServicesCICDPolicy"
            Effect: "Allow"
            Action: !Split [",", !Join ['', [!Join [':*,', !Split [",", !Ref AWSServices]], ':*']]]
            Resource: "*"
            Condition:
              'StringEqualsIfExists':
                  'aws:ResourceTag/TagKey/Owner': DXC
                  'aws:ResourceTag/TagKey/Application': 'AWS Managed Services'
                  'aws:ResourceTag/TagKey/CICD-Pipeline': !Sub ${AWS::StackName}
      Roles:
        - Ref: CodeBuildServiceRole
  
  CodeBuildServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'dynamodb:Create*'
                  - 'dynamodb:Get*'
                  - 'dynamodb:Put*'
                  - 'dynamodb:DeleteItem'
                Resource:
                  - !GetAtt rCicdTfStateLockDdbTable.Arn
              - Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:DeleteObject'
                  - 's3:Get*'
                  - 's3:List*'
                Resource:
                  - !Sub 'arn:aws:s3:::${ArtifactBucket}/*'
                  - !Sub 'arn:aws:s3:::${ArtifactBucket}'
                  - !Sub 'arn:aws:s3:::${TfStateBucket}/*'
                  - !Sub 'arn:aws:s3:::${TfStateBucket}'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                  - 'logs:DescribeLogStreams'
                Resource:
                  - !Sub >-
                    arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
              - Effect: Allow
                Action:
                  - 'codebuild:StopBuild'
                  - 'codebuild:UpdateProject'
                  - 'codebuild:ListProjects'
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuilds'
                Resource:
                  - !Sub 'arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/*'
              - Effect: Allow
                Action:
                  - 'codebuild:CreateReportGroup'
                  - 'codebuild:CreateReport'
                  - 'codebuild:BatchPutTestCases'
                  - 'codebuild:UpdateReport'
                Resource:
                  - !Sub >-
                    arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/*
              - Effect: Allow
                Action:
                  - 'codebuild:ListProjects'
                  - 'codebuild:ListBuilds'
                  - 'codecommit:GitPull'
                  - 'codecommit:GetRepository'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codestar-connections:UseConnection'
                Resource:
                  - !Sub '${CodeStarConnectionARN}'
              - !If
                - CrossAccountRole
                - Effect: Allow
                  Action: 'sts:AssumeRole'
                  Resource: !Ref CrossAccountRole
                - !Ref 'AWS::NoValue'

  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CloudWatchLogsPolicy
                Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
              - Sid: CodeBuildPolicy
                Effect: Allow
                Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Resource: '*'
              - Sid: ArtifactsBuckets
                Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:Get*'
                  - 's3:List*'
                  - 's3:DeleteObject'
                Resource:
                  - !Sub 'arn:aws:s3:::${ArtifactBucket}/*'
                  - !Sub 'arn:aws:s3:::${ArtifactBucket}'
              - Sid: CodeStarConnec
                Effect: Allow
                Action:
                  - 'codestar-connections:UseConnection'
                Resource:
                  - !Sub '${CodeStarConnectionARN}'
              - !If 
                - ManualApproval
                - Sid: SNSAcces                  
                  Action:
                    - 'sns:Publish'
                  Resource:
                    - !Ref cicdApprovalSNSTopic
                  Effect: Allow
                - !Ref 'AWS::NoValue'
              - Sid: CloudFormationAction
                Action:
                    - 'cloudformation:CreateStack'
                    - 'cloudformation:DescribeStacks'
                    - 'cloudformation:DeleteStack'
                    - 'cloudformation:UpdateStack'
                    - 'cloudformation:CreateChangeSet'
                    - 'cloudformation:ExecuteChangeSet'
                    - 'cloudformation:DeleteChangeSet'
                    - 'cloudformation:DescribeChangeSet'
                    - 'cloudformation:SetStackPolicy'
                    - 'iam:PassRole'
                Effect: Allow
                Resource: '*'

  CodeBuildProjectPlan:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub '${AWS::StackName}-plan'
      ServiceRole: !Ref CodeBuildServiceRole
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Ref PlanBuildFile
      Environment:
        Type: LINUX_CONTAINER
        Image: !GetAtt rCodeBuildEnvImage.name
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: CROSS_ACCOUNT_ASSUMED_ROLE
            Value: !Ref CrossAccountRole
          - Name: AWSRegion
            Value: !Ref AWSRegion
          - Name: PipelineRegion
            Value: !Sub ${AWS::Region}
          - Name: BUCKET_NAME
            Value: !Ref ArtifactBucket
          - Name: TEMPLATE_NAME
            Value: !Ref AWS::StackName
      QueuedTimeoutInMinutes: 60
      TimeoutInMinutes: 60

  CodeBuildProjectApply:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub '${AWS::StackName}-apply'
      ServiceRole: !Ref CodeBuildServiceRole
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Ref ApplyBuildFile
      Environment:
        Type: LINUX_CONTAINER
        Image: !GetAtt rCodeBuildEnvImage.name
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: BUCKET_NAME
            Value: !Ref ArtifactBucket
          - Name: CROSS_ACCOUNT_ASSUMED_ROLE
            Value: !Ref CrossAccountRole
          - Name: AWSRegion
            Value: !Ref AWSRegion
          - Name: PipelineRegion
            Value: !Sub ${AWS::Region}
          - Name: TEMPLATE_NAME
            Value: !Ref AWS::StackName
      QueuedTimeoutInMinutes: 60
      TimeoutInMinutes: 60

  TfStateBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  TfStateBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Condition: CrossAccountRole
    Properties:
      Bucket: !Ref TfStateBucket
      PolicyDocument:
        Statement:
          - Effect: Allow                             
            Action:
              - 's3:ListBucket'
              - 's3:ListBucketVersions'
              - 's3:GetObject*'
              - 's3:PutObject*'
            Principal:
                AWS: !Join ['', [!Select [0, !Split [':role', !Select [ 0, !Split [ '/', !Ref CrossAccountRole ]]]], ':root']]
            Resource:
              - !Sub 'arn:aws:s3:::${TfStateBucket}/*'
              - !Sub 'arn:aws:s3:::${TfStateBucket}'    

  ArtifactBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    Properties:
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  ArtifactBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Condition: CrossAccountRole
    Properties:
      Bucket: !Ref ArtifactBucket
      PolicyDocument:
        Statement:
          - Effect: Allow                             
            Action:
              - 's3:ListBucket'
              - 's3:ListBucketVersions'
              - 's3:GetObject'
            Principal:
                AWS: !Join ['', [!Select [0, !Split [':role', !Select [ 0, !Split [ '/', !Ref CrossAccountRole ]]]], ':root']]
            Resource:
              - !Sub 'arn:aws:s3:::${ArtifactBucket}/*'
              - !Sub 'arn:aws:s3:::${ArtifactBucket}'      
          
  CodePipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: !Ref 'AWS::StackName'
      RoleArn: !GetAtt 
        - CodePipelineServiceRole
        - Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              RunOrder: 1
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              Configuration:
                ConnectionArn: !Sub '${CodeStarConnectionARN}'
                BranchName: !Ref GitHubBranch
                FullRepositoryId: !Ref GitHubRepository
                DetectChanges: true
              OutputArtifacts:
                - Name: SourceOutput
        - Name: Plan
          Actions:
            - Name: Build
              RunOrder: 2
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProjectPlan
              OutputArtifacts:
                - Name: BuildOtPlan
              InputArtifacts:
                - Name: SourceOutput
        - !If 
          - ManualApproval
          - Name: Approval
            Actions:
            - InputArtifacts: []
              Name: Manual_Approval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: '1'
                Provider: Manual
              Configuration:
                NotificationArn: !Ref cicdApprovalSNSTopic
                ExternalEntityLink: !Join 
                  - ''
                  - - 'https://'
                    - !Ref 'AWS::Region'
                    - .console.aws.amazon.com/codepipeline/home?region=
                    - !Ref 'AWS::Region'
                    - '#/dashboard'
                CustomData: !Sub
                  Please thouroughly review pipeline build results, terraform 
                  scripts validation & plan before approving. Account - ${AWS::AccountId},  Region - ${AWS::Region}.
              RunOrder: 3
          - !Ref 'AWS::NoValue'
        - Name: Apply
          Actions:
            - Name: Build
              RunOrder: 4
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProjectApply
              OutputArtifacts:
                - Name: BuildOtApply
              InputArtifacts:
                - Name: SourceOutput

  rBuildPlanFailAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Alarms when an IaC terraform CICD Build plan fails.
      AlarmActions:
        - !Ref pCommonIncidentTopic
      MetricName: FailedBuilds
      Namespace: AWS/CodeBuild
      Dimensions:
        - Name: ProjectName
          Value: !Ref CodeBuildProjectPlan
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Period: 300
      Statistic: Sum
      Threshold: 2
  
  rBuildApplyFailAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Alarms when an IaC terraform CICD Build Apply fails.
      AlarmActions:
        - !Ref pCommonIncidentTopic
      MetricName: FailedBuilds
      Namespace: AWS/CodeBuild
      Dimensions:
        - Name: ProjectName
          Value: !Ref CodeBuildProjectApply
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Period: 300
      Statistic: Sum
      Threshold: 1