---
### StackName = global_cloudtrail_health.yaml-${AWS::Region}
AWSTemplateFormatVersion: 2010-09-09
Description: 'A regional template which creates a ScheduledRule Events rule and Lambda to run daily and verify logs-cloudtrail-global stack exists in us-east-1 and open ServiceNow ticket via Agnostic API'
Parameters:

  pFeatureVersion:
    Type: String
    Default: 'None'
    Description: "[DO NOT CHANGE] Version of the Feature. To be Filled by creating/parent stack"
  pDXCS3KeyPrefix:
    Type: String
    Default: 'None'
    Description: "[DO NOT CHANGE] S3 path to the Lambda_functions of Feature. To be Filled by creating/parent stack"
  pBucketName:
    Type: "AWS::SSM::Parameter::Value<String>"
    Default: /DXC/SES/Module/GlobalCloudtrailHealth/S3AssetBucket
    Description: SSM parameter containing the S3 bucket name for the DXC Managed Service assets.
  pNotifyEmailTopic:
    Type: "AWS::SSM::Parameter::Value<String>"
    #Default: /dxc/aws-alarms-common-sns/dxcms-SubscribeEmailForServiceNowAlertsTopic
    Default: /dxc/AWSMS/CommonSNSTopicForSnowAndEmail
    Description: ARN of Common SNS Topic located in the SSM parameter used for sending e-mail notifications
  pCloudtrailHealthNumberOfTrails:
    Type: "AWS::SSM::Parameter::Value<String>"
    Default: /DXC/GlobalCloudtrailHealth/NumberOfTrails
    Description: 'For 2.0 this value should be 3 (for logs-cloudtrail-global plus disabled logs codepipeline source trail and CloudTrailLoggingLocal'
  pCloudtrailHealthLambdaSchedule:
    Type: String
    Description: 'Once per day, check and ensure existence of the global cloudtrail'
    Default: rate(24 hours)
  pIncidentsPriority:
    Description: '[DO NOT CHANGE] Priority of the Incidents in ServiceNow'
    Type: String
    Default: '3'
    AllowedValues: ['1','2','3','4','5']
  pComSnowInputTopic:
    Description: 'ssm parameter for servicenow sns topic' 
    Type: "AWS::SSM::Parameter::Value<String>"
    Default: "/DXC/SES/Module/CommonServicenow/ComSnowStdInputArn"

Conditions:
  cNotifyEmailTopicExists: !Not [!Equals [!Ref pNotifyEmailTopic, '']]

Resources:
  rEventTriggerDxcmsCloudtrailHealthLambda:
    Type: AWS::Events::Rule
    Properties:
      Description: 'Periodically trigger dxcms_global_cloudtrail_health lambda every 24 hours'
      ScheduleExpression: !Sub '${pCloudtrailHealthLambdaSchedule}'
      State: "ENABLED"
      Targets:
        -
          Arn:
            Fn::GetAtt:
              - "rDxcmsCloudtrailHealthLambda"
              - "Arn"
          Id: "TargetFunctionV1"

  rDxcmsCloudtrailHealthLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: "rDxcmsCloudtrailHealthLambda"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "rEventTriggerDxcmsCloudtrailHealthLambda"
          - "Arn"

  rDxcmsCloudtrailHealthLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Tags:
      - Key: Application
        Value: !Ref 'AWS::StackName'
      - Key: Name
        Value: rDxcmsCloudtrailHealthLambdaRole
      - Key: Owner
        Value: DXC
      Policies:
        - PolicyName: !Join ["-", ["DxcmsCloudtrailHealthLambdaPerms", !Ref "AWS::Region"]]
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - cloudtrail:ListTrails
                  - cloudtrail:GetTrailStatus
                  - SNS:Publish
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:DescribeLogGroups
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/dxcms-global-cloudtrail-health-${AWS::Region}:*"
                  - !Sub "arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/FeatureGlobalCloudtrail*"
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                Resource:
                  - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/AccountFeatureDefinitions"
              - Effect: Allow
                Action:
                  - SNS:ListSubscriptionsByTopic
                Resource:
                  #- !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:dxcms-SubscribeEmailForServiceNowAlertsTopic-${AWS::AccountId}-${AWS::Region}"
                  - '*'

  rDxcmsCloudtrailHealthLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "dxcms-global-cloudtrail-health-${AWS::Region}"
      Environment:
        Variables:
          STACK_REGION: !Sub '${AWS::Region}'
          servicenow_topic: !Ref pComSnowInputTopic
          EXECUTION_ACCOUNT: !Sub '${AWS::AccountId}'
          #SNS_EMAIL_TOPIC: !Ref pNotifyEmailTopic
          SNS_EMAIL_TOPIC: !If [cNotifyEmailTopicExists, !Ref pNotifyEmailTopic, 'BLANK']
          NUMBER_OF_TRAILS: !Ref pCloudtrailHealthNumberOfTrails
      Description: 'Lambda to verify logs-cloudtrail-global stack exists in us-east-1 and create ServiceNow ticket if it does not exist'
      Runtime: python3.11
      Handler: dxcms_global_cloudtrail_health.lambda_handler
      MemorySize: 128
      Role: !GetAtt rDxcmsCloudtrailHealthLambdaRole.Arn
      Timeout: 900
      Code:
        S3Bucket: !Ref pBucketName
        S3Key:  !Sub "${pDXCS3KeyPrefix}/global_cloudtrail_health.zip"
        ##S3Key: !Sub "deploy/standards/feature__global_cloudtrail_health/lambda_functions/dxcms_global_cloudtrail_health.zip"
        #S3Key: !Sub "deploy/standards/feature__global_cloudtrail_health/lambda_functions/global_cloudtrail_health.zip"
      Tags:
      - Key: Application
        Value: !Ref 'AWS::StackName'
      - Key: Name
        Value: !Sub "dxcms-global-cloudtrail-health-${AWS::Region}"
      - Key: Owner
        Value: DXC
