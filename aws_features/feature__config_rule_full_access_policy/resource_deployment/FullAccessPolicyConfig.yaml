---
AWSTemplateFormatVersion: '2010-09-09'
Description: "CF Template to create AWS Config rule which checks (by default)
  whether any of the IAM roles are attached with any of the FULL ACCESS POLICIES
  If additional debugging is required, there is a TracingFlag parameter
  that can be set to enable AWS X-Ray tracing."
Parameters:

  TracingFlag:
    Description: "Flag to enable AWS X-Ray tracing (set to Active)
      for debugging. Default setting is PassThrough."
    Type: "AWS::SSM::Parameter::Value<String>"
    Default: "/DXC/CloudWatch/TracingFlag"

  pDXCS3KeyPrefix:
      Type: String
      Default: 'None'
      Description: "[DO NOT CHANGE] S3 path to the Lambda_functions of Feature. To be Filled by creating/parent stack"

  pFeatureVersion:
      Type: String
      Default: 'None'
      Description: "[DO NOT CHANGE] Version of the Feature. To be Filled by creating/parent stack"

  pDXCS3BucketName:
    Type: "AWS::SSM::Parameter::Value<String>" 
    Default: /DXC/SES/Module/ConfigRuleFullAccessPolicy/S3AssetBucket
    Description: "[DO NOT CHANGE] SSM Parameter for bucket location"

  pPlatformVersion:
    Type: "AWS::SSM::Parameter::Value<String>" 
    Default: /DXC/Main/pPlatformVersion
    Description: "[DO NOT CHANGE] SSM Parameter for platform version"

  pfRiskyPolicies:
    Description: 'The risky policies that we are looking for'
    Type: String
    Default: "AmazonEC2FullAccess,AmazonSSMFullAccess,AmazonS3FullAccess"

Resources:
  rRiskyPolicyParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/DXC/ConfigService/RISKY_POLICIES"
      Type: StringList
      Value: !Ref pfRiskyPolicies
      Description: "The risky policies that we are looking for" 

  rfullAccessPolicyLambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "LambdaExecution"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - iam:GetRole
                  - iam:ListAttachedRolePolicies
                  - iam:ListAttachedRolePolicies
                Effect: Allow
                Resource: "*"

              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:DescribeLogGroups
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:PutRetentionPolicy
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/dxc-awsms-fullAccessPolicyCheck*'
              - Effect: Allow
                Action:
                  - "config:Put*"
                  - "config:Get*"
                  - "config:List*"
                  - "config:Describe*"
                Resource: "*"
              - Effect: Allow
                Action:
                  - xray:PutTraceSegments
                  - xray:PutTelemetryRecords
                Resource: "*"
              - Effect: Allow
                Action: 
                  - ssm:GetParametersByPath
                  - ssm:GetParameter
                  - ssm:GetParameters  
                Resource: '*'
      Tags:
      - Key: Application
        Value: !Ref 'AWS::StackName'
      - Key: Name
        Value: "rfullAccessPolicyLambdaRole"
      - Key: Owner
        Value: DXC
      - Key: Purpose
        Value: "FullAccessPolicyConfig"

  ConfigPermissionToCallLambda:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName:
        Fn::GetAtt:
          - rfullAccessPolicyLambda
          - Arn
      Action: "lambda:InvokeFunction"
      Principal: "config.amazonaws.com"

  rfullAccessPolicyLambda:
    Type: "AWS::Lambda::Function"
    Properties:

      Description: "Lambda function that evaluates if any of the IAM Roles
        have full access policy attached"
      FunctionName: 'dxc-awsms-fullAccessPolicyCheck'
      Code:
        S3Bucket: !Ref pDXCS3BucketName
        S3Key: !Sub "${pDXCS3KeyPrefix}/config_rule_full_access_policy.zip"
      Environment:
        Variables:
          RISKY_POLICIES : !Ref rRiskyPolicyParam
      Handler: "index.lambda_handler"
      Runtime: python3.11
      Timeout: 300
      MemorySize: 384
      TracingConfig:
        Mode: !Ref TracingFlag
      Role:
        Fn::GetAtt:
          - rfullAccessPolicyLambdaRole
          - Arn
      Tags:
        -
          Key: "Purpose"
          Value: "Custom Lambda for AWS Config Rule -
            ConfigRuleFullAccessPolicy"
        -
          Key: "Owner"
          Value: "DXC"

  rFullAccessConfigRule:
    Type: "AWS::Config::ConfigRule"
    Properties:
      Description: Checks whether any of the IAM Roles have full access policy attached.
      Scope:
        ComplianceResourceTypes:
          - AWS::IAM::Role
      Source:
        Owner: "CUSTOM_LAMBDA"
        SourceDetails:
          -
            EventSource: "aws.config"
            MessageType: "ConfigurationItemChangeNotification"
        SourceIdentifier:
          Fn::GetAtt:
            - rfullAccessPolicyLambda
            - Arn
    DependsOn: ConfigPermissionToCallLambda

Outputs:
  oRiskyPolicyParam:
    Description: Risky Policies are stored in Parameter store
    Value: !Ref rRiskyPolicyParam      
