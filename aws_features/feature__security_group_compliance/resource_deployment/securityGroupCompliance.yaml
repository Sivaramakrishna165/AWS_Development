AWSTemplateFormatVersion: "2010-09-09"
Description: Creates required resoures for aws config custom resource for security groups
Parameters:

  pSESLayerArn:
    Type : "AWS::SSM::Parameter::Value<String>"
    Default: "/DXC/SES/SESLayerLambdaArn"

  pDXCS3BucketName:
    Type: "AWS::SSM::Parameter::Value<String>" 
    Default: /DXC/SES/Module/SecurityGroupCompliance/S3AssetBucket
    Description: SSM Parameter for bucket location

  pFeatureVersion:
    Type: String
    Default: 'None'
    Description: "[DO NOT CHANGE] Version of the Feature. To be Filled by creating/parent stack"
  
  pDXCS3KeyPrefix:
    Type: String
    Default: 'None'
    Description: "[DO NOT CHANGE] S3 path to the Lambda_functions of Feature. To be Filled by creating/parent stack"

Resources:

  AWSConfigCustomSubnetResouceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service: [
                "lambda.amazonaws.com"
              ]
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: [
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ]
                Resource: "arn:aws:logs:*:*:*"
              -
                Effect: "Allow"
                Action: [
                  "ec2:DescribeInstances",
                  "ec2:DescribeSecurityGroups",
                ]
                Resource: "*"
              -
                Effect: "Allow"
                Action: [
                  "config:GetResourceConfigHistory",
                  "config:PutEvaluations"
                ]
                Resource: "*"
              -
                Effect: "Allow"
                Action: "lambda:InvokeFunction"
                Resource: !Join ["", ["arn:aws:lambda:*:", !Ref "AWS::AccountId", ":function:securityGroupCompliance" ] ]

  SecurityGroupComplianceCheck:
    Type: "AWS::Lambda::Function"
    Properties:
      FunctionName: securityGroupCompliance
      Description: "Lambda function for compliance which checks security groups for public ingress CIDR"
      Handler: "securityGroupCompliance.handler"
      Role:
        Fn::GetAtt:
          - "AWSConfigCustomSubnetResouceRole"
          - "Arn"
      Tags:
        -
          Key: "Owner"
          Value: "DXC"
      Code:
        S3Bucket: !Ref pDXCS3BucketName
        S3Key:  !Sub "${pDXCS3KeyPrefix}/security-group-check.zip"
      Runtime: "nodejs18.x"
      Layers:
        - !Ref pSESLayerArn
      Timeout: 500
      MemorySize: 512

  ConfigPermissionToCallLambda:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName:
        Fn::GetAtt:
          - SecurityGroupComplianceCheck
          - Arn
      Action: "lambda:InvokeFunction"
      Principal: "config.amazonaws.com"

  AWSConfigRule:
    Type: "AWS::Config::ConfigRule"
    Properties:
      Description: Checks whether instances are associated with a security group with a public (0.0.0.0/0) ingress cidr
      Scope:
        ComplianceResourceTypes:
          - AWS::EC2::Instance
          - AWS::EC2::SecurityGroup
      Source:
        Owner: "CUSTOM_LAMBDA"
        SourceDetails:
          -
            EventSource: "aws.config"
            MessageType: "ConfigurationItemChangeNotification"
        SourceIdentifier:
          Fn::GetAtt:
            - SecurityGroupComplianceCheck
            - Arn
    DependsOn: ConfigPermissionToCallLambda
