---
# Feature Definition (FD) for the AWS ECS EC2 Based Cluster as a feature 

# Partition Key = Feature
# No sort key needed

Feature: EcsEc2BasedCluster
Version: '9.0.0.1'
StandardCreationBatch: 3
EnableFeature: False
FeatureParams:
  pECSClusterName:
    Type: String
    Description: Provide the ECS Cluster Name as per your choice with which the resources would be associated.
    Default: ''
  pVpcId:
    Type: String
    Description: Provide the VPC where Feature ECS EC2 based will run on.
    Default: ''
    AllowedPattern: "^(?:vpc-[0-9a-f]{8,17}|)$"
    ConstraintDescription: VPC Id must begin with 'vpc-'.
  pEC2SecurityGroupInboundPortsone:
    Type: Number
    Default: 80
    Description: Provide the port for Inbound rule 80 as this is default HTTP port as specified
  pEC2SecurityGroupInboundPortstwo:
    Type: Number
    Default: 443
    Description: Provide the port for Inbound rule 443 as this is default HTTPS port as specified
  pEC2SecurityGroupOutboundPortsone:
    Type: Number
    Default: 80
    Description: Provide the port for Outbound rule 80 as this is default HTTP port as specified
  pEC2SecurityGroupOutboundPortstwo:
    Type: Number
    Default: 443
    Description: Provide the port for Outbound rule 443 as this is default HTTPS port as specified  
  pSubnetIds:
    Type: String
    Description: The private subnets where ECS Container Instances (host) will be created.
    Default: 'dummy'
  pLatestECSOptimizedAMI:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: "/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id"
    Description: Fetching the ECS Optimized AMI ID from SSM parameter provided by AWS.
  pDisableIMDSv1:
    Type: String
    Default: 'true'
    AllowedValues:
      - 'false'
      - 'true'
  pECSEC2InstanceType:
    Type: String
    Default: ''
    ConstraintDescription: Must be a valid EC2 instance type.
    Description: EC2 instance type for the ECS Container instances. I was using t3.xlarge while testing.
  pKeyName:
    Type: String
    Description: The EC2 Key Pair to allow SSH access to the instances.
    Default: ""
  pEC2EBSVolumeSize:
    Type: Number
    Default: 50
    Description: EC2 EBS volume size
  pContainerInsights:
    Type: String
    Description: Enable or disable container insights, Enabling this for Monitoring Solution and seeing enhanced metrics.
    AllowedValues:
      - 'enabled'
      - 'disabled'
    Default: 'enabled'
  pMinSizeCapacity:
    Type: String
    Description: The Minimum size capacity of ECS Container Instances associated with group.
    Default: ""
  pDesiredCapacity:
    Type: String
    Description: The desired capacity is the initial capacity of the Auto Scaling group at the time of its creation and the capacity of ECS Container Instances it attempts to maintain.
    Default: ""
  pMaxSizeCapacity: 
    Type: String
    Description: The Maximum size capacity of ECS Container Instances to be allocated if autoscaling is required and scaling will not go above this number. 
    Default: ""    
Standards:
  - Gold
Owner:
  Name: AWS Platform Engineering Team
  Email: awspe-all@dxc.com
  OtherContactInfo: AWS Platform Engineering team, DXC Technology
Purpose: Creating a Feature which will create the ECS Cluster mapped with the capacity provider & reservation with ASG which will launch ECS Container Instances as per min, desired and max capacity based on the requirement with the provided instance type and other customizations and all in private subnets.
AllowDisable: true
ResourceDeployment:
  - EcsEc2BasedCluster.yaml
DependsOnFeature:
  - AWSCloudWatchAlarmsIncidentPriorities