{
  "Comment": "State Machine for Cancelling Patching activity",
  "StartAt": "cleanup_tags_cloudwatchrules",
  "States": {
    "cleanup_tags_cloudwatchrules": {
      "Type": "Task",
      "Resource": "${cleanup_tags_cloudwatchrules}",
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException",
			"Lambda.Unknown",
            "States.Timeout"
          ],
          "IntervalSeconds": 3,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Next": "update_dynamodb",
      "Catch": [
        {
          "ErrorEquals": [
            "Lambda.Unknown",
            "States.Timeout",
            "States.TaskFailed",
            "States.Runtime",
            "States.Permissions",
            "States.DataLimitExceeded"
          ],
          "Next": "cleanup_tags_cloudwatchrules_error"
        }
      ],
      "TimeoutSeconds": 300
    },
    "cleanup_tags_cloudwatchrules_error": {
      "Type": "Pass",
      "Next": "notify_failure_from_cancel_stepfunction",
      "Parameters": {
        "Cause.$": "$.Cause",
        "Execution.$": "$$.Execution.Id",
        "StateMachine": "$$.StateMachine",
        "ErrorMessageFrom": "cleanup_tags_cloudwatchrules Function"
      }
    },
    "notify_failure_from_cancel_stepfunction": {
      "Type": "Task",
      "Resource": "${notify_failure_from_cancel_stepfunction}",
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException",
			"Lambda.Unknown"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "End": true
    },
    "update_dynamodb": {
      "Type": "Task",
      "Resource": "${update_dynamodb}",
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException",
			"Lambda.Unknown",
            "States.Timeout",
            "States.TaskFailed"
          ],
          "IntervalSeconds": 3,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Next": "send_cancelled_cleanup_email",
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "update_dynamodb_error"
        }
      ],
      "TimeoutSeconds": 300
    },
    "update_dynamodb_error": {
      "Type": "Pass",
      "Next": "notify_failure_from_cancel_stepfunction",
      "Parameters": {
        "Cause.$": "$.Cause",
        "Execution.$": "$$.Execution.Id",
        "StateMachine": "$$.StateMachine",
        "ErrorMessageFrom": "update_dynamodb Function"
      }
    },
    "send_cancelled_cleanup_email": {
      "Type": "Task",
      "Resource": "${send_cancelled_cleanup_email}",
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException",
			"Lambda.Unknown",
            "States.Timeout"
          ],
          "IntervalSeconds": 3,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "End": true,
      "Catch": [
        {
          "ErrorEquals": [
            "States.Timeout",
            "States.TaskFailed",
            "States.DataLimitExceeded",
            "States.Runtime",
            "States.Permissions",
            "Lambda.Unknown"
          ],
          "Next": "send_cancelled_cleanup_email_error"
        }
      ],
      "TimeoutSeconds": 300
    },
    "send_cancelled_cleanup_email_error": {
      "Type": "Pass",
      "Next": "notify_failure_from_cancel_stepfunction",
      "Parameters": {
        "Cause.$": "$.Cause",
        "Execution.$": "$$.Execution.Id",
        "StateMachine": "$$.StateMachine",
        "ErrorMessageFrom": "send_cancelled_cleanup_email Function"
      }
    }
  }
}
