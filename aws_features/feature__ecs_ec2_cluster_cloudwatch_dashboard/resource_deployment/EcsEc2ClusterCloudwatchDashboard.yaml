AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Template to create an AWS CloudWatch Dashboard for Amazon ECS
Parameters:
  pDXCS3BucketName:
    Type: "AWS::SSM::Parameter::Value<String>" 
    Default: /DXC/SES/Module/EcsEc2ClusterCloudwatchDashboard/S3AssetBucket
    Description: SSM Parameter for bucket location
  pDXCS3KeyPrefix:
    Type: String
    Default: 'None'
    Description: "[DO NOT CHANGE] S3 path to the Lambda_functions of Feature. To be Filled by creating/parent stack"
  pFeatureVersion:
    Type: String
    Default: 'None'
    Description: "[DO NOT CHANGE] Version of the Feature. To be Filled by creating/parent stack"
  pSESLayerArn:
    Description: "SSM parameter for Lambda Layer ARN"
    Type: "AWS::SSM::Parameter::Value<String>"
    Default: /DXC/SES/SESLayerLambdaArn
  pDashboardName:
    Description: Enter the dashboard name for the ECS EC2 launch type Container Instances running desired no. of tasks.
    Type: String
    Default: ""
  pClusterName:
    Description: Name of the ECS cluster which can be retrieved from the output section of previous to previous feature deployment.
    Type: String
    Default: ""
  pServiceName:
    Description: Name of the ECS Service which can be retrieved from the output section of previous feature deployment.
    Type: String
    Default: ""
  pECSClusterRelatedAlarm:
    Description: 'Enable this when you want to create Cluster related Alarm for CPU and MEMORY. Pre-Requisite FeatureAWSCloudWatchAlarmsIncidentPriorities should be deployed.'
    Type: String
    AllowedValues: ['true', 'false']
    Default: 'true'
  pECSInstancesRelatedAlarm:
    Description: 'Enable this when you want to create Instance related Alarm for CPU and MEMORY. Pre-Requisite FeatureAWSCloudWatchAlarmsIncidentPriorities should be deployed.'
    Type: String
    AllowedValues: ['true', 'false']
    Default: 'true'
  pEcsEc2InstancesCPUUtilThreshold:
    Type: String
    Default: 80
    Description: The target utilization for the ECS EC2 Container Instances CPU.
  pEcsEc2InstancesMemoryUtilThreshold:
    Type: String
    Default: 80
    Description: The target utilization in for the ECS EC2 Container Instances Memory.   
  pEcsEc2ClusterCPUUtilThreshold:
    Type: String
    Default: 80
    Description: The target utilization for the ECS EC2 Cluster CPU.
  pEcsEc2ClusterMemoryUtilThreshold:
    Type: String
    Default: 80
    Description: The target utilization in MB for the ECS EC2 Cluster Memory.
  pECSClustersandInstancesComparisonOperator:
    Description: 'The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is used as the first operand.'
    Type: String
    Default: 'GreaterThanThreshold'
  pECSClusterandInstancesStatistic:
    Description: 'The statistic for the metric associated with the alarm'
    Type: String
    AllowedValues: ['Average','Maximum', 'Minimum', 'SampleCount', 'Sum']
    Default: 'Average'
  pPeriodOverWhichStatIsAppliedForCpuAndMemory:
    Type: String
    Default: 60
    Description: Provided the default value in multiple of 60 in seconds, over which the statistic is applied for CPU and Memory.  
  pEvaluationPeriod:
    Type: String
    Default: 2
    Description: Provided the default number of periods over which data is compared to the specified threshold.
  pPriorityIncidentTopic:
    Description: SSM Param to create the Incidents in Service-Now with priority fetched from DDB - FtCloudWatchAlarmsIncidentPriorities
    Type: "AWS::SSM::Parameter::Value<String>" 
    Default: /DXC/Alarms/CreateIncident-Default

Conditions:
  CreateECSClusterCpuandMemAlarms: !Equals [!Ref "pECSClusterRelatedAlarm", "true"] 
  CreateECSInstancesCpuandMemAlarms: !Equals [!Ref "pECSInstancesRelatedAlarm", "true"] 

Resources:
  rECSInstancesCPUUtilAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateECSInstancesCpuandMemAlarms
    Properties:
      AlarmDescription: Scale out if ECS Container Instances CPU Utilization > 80% for 2 minutes.
      Namespace: AWS/ECS
      MetricName: CPUUtilization
      Dimensions:
        - Name: ClusterName
          Value: !Ref pClusterName
      Statistic: !Ref pECSClusterandInstancesStatistic
      Period: !Ref pPeriodOverWhichStatIsAppliedForCpuAndMemory
      EvaluationPeriods: !Ref pEvaluationPeriod
      Threshold: !Ref pEcsEc2InstancesCPUUtilThreshold
      ComparisonOperator: !Ref pECSClustersandInstancesComparisonOperator
      AlarmActions:
        # - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${pPriorityIncidentTopic}"
        - !Ref "pPriorityIncidentTopic"
      ActionsEnabled: True
  
  rECSInstancesMemoryUtilAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateECSInstancesCpuandMemAlarms
    Properties:
      AlarmDescription: Scale out if ECS Container Instances Memory Utilization > 80% for 2 minutes.
      Namespace: AWS/ECS
      MetricName: MemoryUtilization
      Dimensions:
        - Name: ClusterName
          Value: !Ref pClusterName
      Statistic: !Ref pECSClusterandInstancesStatistic
      Period: !Ref pPeriodOverWhichStatIsAppliedForCpuAndMemory
      EvaluationPeriods: !Ref pEvaluationPeriod
      Threshold: !Ref pEcsEc2InstancesMemoryUtilThreshold
      ComparisonOperator: !Ref pECSClustersandInstancesComparisonOperator
      AlarmActions:
        # - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${pPriorityIncidentTopic}"
        - !Ref "pPriorityIncidentTopic"
      ActionsEnabled: True

  rECSClusterCPUUtilAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateECSClusterCpuandMemAlarms
    Properties:
      AlarmDescription: Scale out if ECS Cluster CPU Utilization > 80% for 2 minutes.
      Namespace: ECS/ContainerInsights
      MetricName: CpuUtilized
      Dimensions:
        - Name: ClusterName
          Value: !Ref pClusterName
      Statistic: !Ref pECSClusterandInstancesStatistic
      Period: !Ref pPeriodOverWhichStatIsAppliedForCpuAndMemory
      EvaluationPeriods: !Ref pEvaluationPeriod
      Threshold: !Ref pEcsEc2ClusterCPUUtilThreshold
      ComparisonOperator: !Ref pECSClustersandInstancesComparisonOperator
      AlarmActions:
        # - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${pPriorityIncidentTopic}"
        - !Ref "pPriorityIncidentTopic"
      ActionsEnabled: True
  
  rECSClusterMemoryUtilAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateECSClusterCpuandMemAlarms
    Properties:
      AlarmDescription: Scale out if ECS Cluster Memory Utilization > 80% for 2 minutes.
      Namespace: ECS/ContainerInsights
      MetricName: MemoryUtilized
      Dimensions:
        - Name: ClusterName
          Value: !Ref pClusterName
      Statistic: !Ref pECSClusterandInstancesStatistic
      Period: !Ref pPeriodOverWhichStatIsAppliedForCpuAndMemory
      EvaluationPeriods: !Ref pEvaluationPeriod
      Threshold: !Ref pEcsEc2ClusterMemoryUtilThreshold
      ComparisonOperator: !Ref pECSClustersandInstancesComparisonOperator
      AlarmActions:
        # - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${pPriorityIncidentTopic}"
        - !Ref "pPriorityIncidentTopic"
      ActionsEnabled: True
  
  EcsEc2ContainerInstancesDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Ref pDashboardName
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  ["AWS/ECS", "CPUUtilization", "ClusterName", "${pClusterName}"]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "stat": "Sum",
                "period": 60,
                "yAxis": {
                  "left": {
                    "min": 0
                  }
                },
                "legend": {
                  "position": "right"
                },
                "title": "InstanceCPUUtilization"
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  ["AWS/ECS", "MemoryUtilization", "ClusterName", "${pClusterName}"]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "stat": "Sum",
                "period": 60,
                "yAxis": {
                  "left": {
                    "min": 0
                  }
                },
                "legend": {
                  "position": "right"
                },
                "title": "InstanceMemoryUtilization"
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  ["ECS/ContainerInsights", "ContainerInstanceCount", "ClusterName", "${pClusterName}"]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "stat": "Sum",
                "period": 60,
                "yAxis": {
                  "left": {
                    "min": 0
                  }
                },
                "legend": {
                  "position": "right"
                },
                "title": "ContainerInstanceCount"
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  ["ECS/ContainerInsights", "CpuUtilized", "ServiceName", "${pServiceName}", "ClusterName", "${pClusterName}"]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "stat": "Sum",
                "period": 60,
                "yAxis": {
                  "left": {
                    "min": 0
                  }
                },
                "legend": {
                  "position": "right"
                },
                "title": "CPUUtilization"
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  ["ECS/ContainerInsights", "MemoryUtilized", "ServiceName", "${pServiceName}", "ClusterName", "${pClusterName}"]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "stat": "Sum",
                "period": 60,
                "yAxis": {
                  "left": {
                    "min": 0
                  }
                },
                "legend": {
                  "position": "right"
                },
                "title": "MemoryUtilization"
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  ["ECS/ContainerInsights", "DesiredTaskCount", "ServiceName", "${pServiceName}", "ClusterName", "${pClusterName}"]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "stat": "Sum",
                "period": 60,
                "yAxis": {
                  "left": {
                    "min": 0
                  }
                },
                "legend": {
                  "position": "right"
                },
                "title": "DesiredTaskCount"
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  ["ECS/ContainerInsights", "RunningTaskCount", "ServiceName", "${pServiceName}", "ClusterName", "${pClusterName}"]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "stat": "Sum",
                "period": 60,
                "yAxis": {
                  "left": {
                    "min": 0
                  }
                },
                "legend": {
                  "position": "right"
                },
                "title": "RunningTaskCount"
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  ["ECS/ContainerInsights", "ServiceCount", "ClusterName", "${pClusterName}"]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "stat": "Sum",
                "period": 60,
                "yAxis": {
                  "left": {
                    "min": 0
                  }
                },
                "legend": {
                  "position": "right"
                },
                "title": "ServiceCount"
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  ["ECS/ContainerInsights", "NetworkRxBytes", "ServiceName", "${pServiceName}", "ClusterName", "${pClusterName}"]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "stat": "Sum",
                "period": 60,
                "yAxis": {
                  "left": {
                    "min": 0
                  }
                },
                "legend": {
                  "position": "right"
                },
                "title": "NetworkRxBytes"
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  ["ECS/ContainerInsights", "NetworkTxBytes", "ServiceName", "${pServiceName}", "ClusterName", "${pClusterName}"]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "stat": "Sum",
                "period": 60,
                "yAxis": {
                  "left": {
                    "min": 0
                  }
                },
                "legend": {
                  "position": "right"
                },
                "title": "NetworkTxBytes"
              }
            }
          ]
        }
