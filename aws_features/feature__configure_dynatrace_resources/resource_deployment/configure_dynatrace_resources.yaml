AWSTemplateFormatVersion: "2010-09-09"
Description: " This feature will create a Dynatrace instance profile for the  ActiveGate server (or other servers), and a monitored account role based on Dynatrace provided CloudFormation templates"
# Notes: 
#        https://github.com/dynatrace-oss/cloud-snippets/blob/main/aws/role-based-access/role_based_access_AG_account_template.yml
#        https://github.com/dynatrace-oss/cloud-snippets/blob/main/aws/role-based-access/role_based_access_monitored_account_template.yml

Parameters:
# 3 required SES parameters
  pDXCS3BucketName:
    Type: "AWS::SSM::Parameter::Value<String>" 
    Default: "/DXC/SES/Module/ConfigureDynatraceResources/S3AssetBucket"
    Description: "SSM Parameter for bucket location"
  pFeatureVersion:
    Type: String
    Default: 'None'
    Description: "[DO NOT CHANGE] Version of the Feature. To be Filled by creating/parent stack"
  pDXCS3KeyPrefix:
    Type: String
    Default: 'None'
    Description: "[DO NOT CHANGE] S3 path to the Lambda_functions of Feature. To be Filled by creating/parent stack"
# Feature parameters
  pFtDynConTokenId:
    Type: String
    Default: 'MustBeSet'
    Description: 'This is the External ID (token) created in the DynatraceManaged console when configuring AWS in the Cloud and virtualization menu.  Must be set before deploying the feature.'

Resources:
  rDynatraceInstanceRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub 'dxcmsDynatraceInstanceRole-${AWS::Region}-${AWS::AccountId}'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
                - "ssm.amazonaws.com"
                - "s3.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
        - "arn:aws:iam::aws:policy/service-role/AmazonSSMMaintenanceWindowRole"
        - "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy"
        - "arn:aws:iam::aws:policy/service-role/AWSElasticDisasterRecoveryEc2InstancePolicy"
        - "arn:aws:iam::aws:policy/service-role/AWSElasticDisasterRecoveryAgentPolicy"
        - "arn:aws:iam::aws:policy/service-role/AWSElasticDisasterRecoveryFailbackPolicy"
        - "arn:aws:iam::aws:policy/service-role/AWSElasticDisasterRecoveryRecoveryInstancePolicy"        
      Policies:
        -
          PolicyName: "DynatraceInstancePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "ssm:PutParameter"
                  - "ssm:AddTagsToResource"
                  - "logs:DescribeLogGroups"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:ListMultipartUploadParts"
                  - "s3:ListBucket"
                  - "s3:ListBucketMultipartUploads"
                Resource:
                  - !Sub 'arn:aws:s3:::awspe-downloads'
                  - !Sub 'arn:aws:s3:::awspe-downloads/*'
                  - !Sub 'arn:aws:s3:::dxc.customer.config-*'
                  - !Sub 'arn:aws:s3:::dxc.customer.config-*/*'

  rDynWindowsPatchingRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ssm.amazonaws.com"
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonSSMMaintenanceWindowRole"
        - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"

  rDynWindowsPatchingRoleArnParam:
    Type: "AWS::SSM::Parameter"
    DependsOn: rDynWindowsPatchingRole
    Properties:
      Name: "/DXC/IAMResources/DynWindowsPatchingRoleArn"
      Description: "IAM Role ARN for Windows Patching Role"
      Type: "String"
      Value: !GetAtt rDynWindowsPatchingRole.Arn

  rDynLinuxPatchingRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ssm.amazonaws.com"
                - "ec2.amazonaws.com"
                - "s3.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonSSMMaintenanceWindowRole"
        - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"

  rDynLinuxPatchingRoleArnParam:
    Type: "AWS::SSM::Parameter"
    DependsOn: rDynLinuxPatchingRole
    Properties:
      Name: "/DXC/IAMResources/DynLinuxPatchingRoleArn"
      Description: "IAM Role ARN for Linux Patching Role"
      Type: "String"
      Value: !GetAtt rDynLinuxPatchingRole.Arn

  rDxcmsDynMonitorRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'dxcmsDynatraceMonitorRole-${AWS::Region}-${AWS::AccountId}'
      Description: Dynatrace Monitoring Role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub "arn:aws:iam::${AWS::AccountId}:role/${rDynatraceInstanceRole}"
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Ref 'pFtDynConTokenId'
      Path: /
      ManagedPolicyArns:
        - !Ref 'rDxcmsDynMonitorPolicy'

  #
  # Policies
  #
  pDynWindowsPatchingPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    DependsOn: rDynatraceInstanceRole
    Properties:
      Roles:
        - !Ref rDynatraceInstanceRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "iam:PassRole"
            Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/${rDynWindowsPatchingRole}'

  pDynLinuxPatchingPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    DependsOn: rDynatraceInstanceRole
    Properties:
      Roles:
        - !Ref rDynatraceInstanceRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "iam:PassRole"
            Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/${rDynLinuxPatchingRole}'

  rDynOSCISEc2Policy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "DynOSCISEc2Policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
                
                - s3:GetObject
                - s3:PutObject
                - s3:ListBucket
                
            Resource: 
              - !Sub
                - 'arn:aws:s3:::${BucketName}-${AWS::AccountId}-${AWS::Region}/*'
                - {BucketName: 'dxc.customer.oscis.compliance'}
      Roles:
        - !Ref rDynatraceInstanceRole

  rDynSnapshotPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "DynSnapshotPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
                - "ec2:AttachVolume"
                - "ec2:CopySnapshot"
                - "ec2:DescribeInstances"
                - "ec2:DescribeTags"
                - "ec2:DescribeSnapshotAttribute"
                - "ec2:CreateTags"
                - "ec2:ResetSnapshotAttribute"
                - "ec2:ImportSnapshot"
                - "ec2:DescribeSnapshots"
                - "ec2:DescribeVolumeAttribute"
                - "ec2:DescribeImportSnapshotTasks"
                - "ec2:DescribeVolumeStatus"
                - "ec2:ModifySnapshotAttribute"
                - "ec2:DescribeVolumes"
                - "ec2:CreateSnapshot"
                - "ec2:CreateImage"
                - "ec2:DescribeImages"
                - "ec2:DescribeSnapshots"
            Resource: '*'
      Roles:
        - !Ref rDynatraceInstanceRole                    

  # Custom policies for Instance Role:
  rDynCloudWatchLogsPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "DynCloudWatchLogsPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - "cloudwatch:PutMetricData"
              - "cloudwatch:ListMetrics"
              - "ec2:DescribeTags"
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
              - "logs:DescribeLogStreams"
              - "logs:PutRetentionPolicy"
            Resource: "*"
      Roles:
        - Ref: rDynatraceInstanceRole

  rDynCloudWatchEventsPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "DynCloudWatchEventsPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Sid: "DynCloudWatchEventsFullAccess"
            Effect: "Allow"
            Action:
              - "events:DescribeRule"
              - "events:ListRuleNamesByTarget"
              - "events:EnableRule"
              - "events:ListRules"
              - "events:ListTargetsByRule"
              - "events:PutEvents"
              - "events:PutTargets"
              - "events:TestEventPattern"
            Resource: '*'
          -
            Sid: "IAMPassRoleForDynCloudWatchEvents"
            Effect: "Allow"
            Action:
              - "iam:PassRole"
            Resource: "arn:aws:iam::*:role/AWS_Events_Invoke_Targets"
      Roles:
        - Ref: rDynatraceInstanceRole

  rDxcmsDynMonitorPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub 'dxcmsDynMonitorPolicy-${AWS::Region}-${AWS::AccountId}'
      Description: Dynatrace Monitoring Policy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: DxcmsDynMonitorPolicyId
            Effect: Allow
            Action:
              - acm-pca:ListCertificateAuthorities
              - apigateway:GET
              - apprunner:ListServices
              - appstream:DescribeFleets
              - appsync:ListGraphqlApis
              - athena:ListWorkGroups
              - autoscaling:DescribeAutoScalingGroups
              - cloudformation:ListStackResources
              - cloudfront:ListDistributions
              - cloudhsm:DescribeClusters
              - cloudsearch:DescribeDomains
              - cloudwatch:GetMetricData
              - cloudwatch:GetMetricStatistics
              - cloudwatch:ListMetrics
              - codebuild:ListProjects
              - datasync:ListTasks
              - dax:DescribeClusters
              - directconnect:DescribeConnections
              - dms:DescribeReplicationInstances
              - dynamodb:ListTables
              - dynamodb:ListTagsOfResource
              - ec2:DescribeAvailabilityZones
              - ec2:DescribeInstances
              - ec2:DescribeNatGateways
              - ec2:DescribeSpotFleetRequests
              - ec2:DescribeTransitGateways
              - ec2:DescribeVolumes
              - ec2:DescribeVpnConnections
              - ecs:ListClusters
              - eks:ListClusters
              - elasticache:DescribeCacheClusters
              - elasticbeanstalk:DescribeEnvironmentResources
              - elasticbeanstalk:DescribeEnvironments
              - elasticfilesystem:DescribeFileSystems
              - elasticloadbalancing:DescribeInstanceHealth
              - elasticloadbalancing:DescribeListeners
              - elasticloadbalancing:DescribeLoadBalancers
              - elasticloadbalancing:DescribeRules
              - elasticloadbalancing:DescribeTags
              - elasticloadbalancing:DescribeTargetHealth
              - elasticmapreduce:ListClusters
              - elastictranscoder:ListPipelines
              - es:ListDomainNames
              - events:ListEventBuses
              - firehose:ListDeliveryStreams
              - fsx:DescribeFileSystems
              - gamelift:ListFleets
              - glue:GetJobs
              - inspector:ListAssessmentTemplates
              - kafka:ListClusters
              - kinesis:ListStreams
              - kinesisanalytics:ListApplications
              - kinesisvideo:ListStreams
              - lambda:ListFunctions
              - lambda:ListTags
              - lex:GetBots
              - logs:DescribeLogGroups
              - mediaconnect:ListFlows
              - mediaconvert:DescribeEndpoints
              - mediapackage-vod:ListPackagingConfigurations
              - mediapackage:ListChannels
              - mediatailor:ListPlaybackConfigurations
              - opsworks:DescribeStacks
              - qldb:ListLedgers
              - rds:DescribeDBClusters
              - rds:DescribeDBInstances
              - rds:DescribeEvents
              - rds:ListTagsForResource
              - redshift:DescribeClusters
              - robomaker:ListSimulationJobs
              - route53:ListHostedZones
              - route53resolver:ListResolverEndpoints
              - s3:ListAllMyBuckets
              - sagemaker:ListEndpoints
              - sns:ListTopics
              - sqs:ListQueues
              - storagegateway:ListGateways
              - sts:GetCallerIdentity
              - swf:ListDomains
              - tag:GetResources
              - tag:GetTagKeys
              - transfer:ListServers
              - workmail:ListOrganizations
              - workspaces:DescribeWorkspaces
            Resource: '*'
  
  #
  #
  # Instance Profiles
  #

  rDynatraceInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    DependsOn: rDynatraceInstanceRole
    Properties:
      Roles:
        - Ref: rDynatraceInstanceRole

  rDynatraceInstanceProfileArnParam:
    Type: "AWS::SSM::Parameter"
    DependsOn: rDynatraceInstanceProfile
    Properties:
      Name: "/DXC/IAMResources/DynatraceInstanceProfileArn"
      Description: "Default IAM Instance Profile ARN"
      Type: "String"
      Value: !GetAtt rDynatraceInstanceProfile.Arn

  rDynatraceInstanceProfileParam:
    Type: "AWS::SSM::Parameter"
    DependsOn: rDynatraceInstanceProfile
    Properties:
      Name: "/DXC/IAMResources/DynatraceInstanceProfile"
      Description: "Default IAM Instance Profile"
      Type: "String"
      Value: !Ref rDynatraceInstanceProfile

  rDynatraceInstanceRoleParam: 
    Type: "AWS::SSM::Parameter"
    DependsOn: rDynatraceInstanceRole
    Properties:
      Name: "/DXC/IAMResources/DynatraceInstanceRole"
      Description: "Default IAM Instance Role"
      Type: "String"
      Value: !Ref rDynatraceInstanceRole

Outputs:

  AWSPEDynatraceInstanceProfileARN:
    Export:
      Name: AWSPEDynatraceInstanceProfileARN
    Value:
      !GetAtt rDynatraceInstanceProfile.Arn

  AWSPEDynatraceInstanceProfileName:
    Export:
      Name: AWSPEDynatraceInstanceProfileName
    Value:
      Ref: rDynatraceInstanceProfile

  AWSPEDynLinuxPatchingRole:
    Export:
      Name: AWSPEDynLinuxPatchingRole
    Value:
      !GetAtt rDynLinuxPatchingRole.Arn

  AWSPEDynWindowsPatchingRole:
    Export:
      Name: AWSPEDynWindowsPatchingRole
    Value:
      !GetAtt rDynWindowsPatchingRole.Arn

