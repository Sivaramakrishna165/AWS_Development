---
AWSTemplateFormatVersion: 2010-09-09

Description: DXC Managed Services - SSM Session monitoring as a feature

Parameters:

  pFeatureVersion:
    Type: String
    Default: 'None'
    Description: "[DO NOT CHANGE] Version of the Feature. To be Filled by creating/parent stack"

  pDXCS3KeyPrefix:
    Type: String
    Default: 'None'
    Description: "[DO NOT CHANGE] S3 path to the Lambda_functions of Feature. To be Filled by creating/parent stack"

  pDXCS3BucketName:
    Type: "AWS::SSM::Parameter::Value<String>" 
    Default: /DXC/SES/Module/EC2SessionMonitoring/S3AssetBucket
    Description: "[DO NOT CHANGE] SSM Parameter for bucket location"

  pPlatformVersion:
    Type: "AWS::SSM::Parameter::Value<String>" 
    Default: /DXC/Main/pPlatformVersion
    Description: "[DO NOT CHANGE] SSM Parameter for platform version"

  pDefaultInstanceRole:
    Type: "AWS::SSM::Parameter::Value<String>" 
    Default: /DXC/IAMResources/DefaultInstanceRole
    Description: "[DO NOT CHANGE] SSM Parameter for DefaultInstanceRole"

  pSESLayerArn:
    Type : 'AWS::SSM::Parameter::Value<String>'
    Default: /DXC/SES/SESLayerLambdaArn

  pGlacierRetention:
    Description: Number of days to retain logs in Glacier (Minimum 90)
    Type: Number
    Default: 2555
    MinValue: 90

  pTransitionDays:
    Description: Number of days to retain logs before archiving to Glacier
    Type: Number
    Default: 90

  pDocName:
    Description: Name of the SSM Session Manager Run Shell Document
    Type: String
    Default: 'SSM-SessionManagerRunShell'

Conditions:
    IsGovCloud: !Equals [ us-gov-west-1, !Ref 'AWS::Region' ]    

Resources:

  rSSMRunShellDocDelLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Join ["-", ["dxc-awsms-SSMRunShellDocDelLambda", !Ref "AWS::Region"]]
      Code:
        S3Bucket: !Ref pDXCS3BucketName
        S3Key: !Sub "${pDXCS3KeyPrefix}/ec2_sessionmonitoring.zip" 
      Environment:
        Variables:
          DEBUG: True
          doc_name: !Ref pDocName
      #Layers:
      #  - !Ref pSESLayerArn
      Handler: ec2_sessionmonitoring.lambda_handler
      MemorySize: 128
      Role: !GetAtt rSSMRunShellDocDelLambdaRole.Arn
      Runtime: python3.11
      Timeout: 60
      Tags:
        - Key: Owner
          Value: DXC
        - Key: Purpose
          Value: "SSMRunShell-Document-Delete-Lambda"

  rSSMRunShellDocDelLambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Join ["-", ["SSMRunShellDocDelLambdaRole", !Ref "AWS::Region"]]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - 'lambda.amazonaws.com'
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "SSMRunShellDocDelLambdaPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: 
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/dxc-awsms-SSMRunShellDocDelLambda*'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/dxc-awsms-SSMRunShellDocDelLambda*:log-stream:*'
              - Effect: "Allow"
                Action:
                  - "ssm:DescribeDocument"
                  - "ssm:ListDocuments"
                  - "ssm:GetDocument"
                  - "ssm:DeleteDocument"
                Resource: 
                  - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:document/SSM-SessionManagerRunShell'

  rSSMRunShellDocDelLambdaCustom:
    Type: 'AWS::CloudFormation::CustomResource'
    Version: '1.0'
    Properties:
      ServiceToken: !GetAtt rSSMRunShellDocDelLambda.Arn

  rSessionManagerLogsBucket:
    Type: AWS::S3::Bucket  
    DependsOn: rSSMRunShellDocDelLambdaCustom
    DeletionPolicy: Retain
    Properties:
      AccessControl: LogDeliveryWrite
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - Id: Transition90daysRetain7yrs
            Status: Enabled
            ExpirationInDays: !Ref pGlacierRetention
            Transition:
              TransitionInDays: !Ref pTransitionDays
              StorageClass: GLACIER
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True

      Tags:
        - Key: Owner
          Value: DXC

  rSessionManagerLogsBucketDefaultInstanceRolePolicy:
    Type: "AWS::IAM::Policy"
    DependsOn: rSessionManagerLogsBucket
    Properties:
      PolicyName: "SSMSessionManagerPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
                
                - s3:GetObject
                - s3:PutObject
                - s3:ListBucket
                
            Resource: 
              - !Sub
                - 'arn:aws:s3:::${BucketName}/ssmsessionmanagerlogs/*'
                - { BucketName: !Ref rSessionManagerLogsBucket }
              - !Sub 
                - 'arn:aws:s3:::${BucketName}*'
                - { BucketName: !Ref rSessionManagerLogsBucket }

          -
            Effect: "Allow"
            Action:
                - s3:GetEncryptionConfiguration
            Resource: "*"
          
          - 
            Effect: "Allow"
            Action:
                - kms:Decrypt
            Resource: "*"
          
          -
            Effect: "Allow"
            Action:
                - kms:GenerateDataKey
            Resource: "*"

      Roles:
        - !Ref pDefaultInstanceRole

  rSaveSessionManagerLogsBucket:
    Type: "AWS::SSM::Parameter"
    DependsOn: rSessionManagerLogsBucket
    Properties:
      Name: /DXC/SessionManagerLogsBucket
      Description: Archive Logs Bucket
      Type: "String"
      Value: !Ref rSessionManagerLogsBucket

  rSessionManagerLogsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: rSessionManagerLogsBucket
    Properties:
      Bucket: !Ref rSessionManagerLogsBucket
      PolicyDocument:
        Statement:
          - Sid: Enforce HTTPS Connections
            Action: s3:*
            Effect: Deny
            Principal: '*'
            Resource: !Sub
              - arn:${Partition}:s3:::${rSessionManagerLogsBucket}/*
              - { Partition: !If [ IsGovCloud, aws-us-gov, aws ] }
            Condition:
                Bool:
                  aws:SecureTransport: false
          - Sid: Restrict Delete* Actions
            Action: s3:Delete*
            Effect: Deny
            Principal: '*'
            Resource: !Sub
              - arn:${Partition}:s3:::${rSessionManagerLogsBucket}/*
              - { Partition: !If [ IsGovCloud, aws-us-gov, aws ] }
          - Sid: DenyUnEncryptedObjectUploads
            Effect: Deny
            Principal: '*'
            Action: s3:PutObject
            Resource: !Sub
              - arn:${Partition}:s3:::${rSessionManagerLogsBucket}/*
              - { Partition: !If [ IsGovCloud, aws-us-gov, aws ] }
            Condition:
                StringNotEquals:
                  s3:x-amz-server-side-encryption: AES256

  rSessionPreferencesDocument:
    Type: AWS::SSM::Document
    DependsOn: rSessionManagerLogsBucket
    Properties:
      Name: SSM-SessionManagerRunShell
      Content:
        schemaVersion: '1.0'
        description: Document to hold regional settings for Session Manager
        sessionType: Standard_Stream
        inputs:
          s3BucketName: !Ref rSessionManagerLogsBucket
          s3KeyPrefix: 'sessionmanagerlogs'
          s3EncryptionEnabled: true
          idleSessionTimeout: '20'
      DocumentType: Session

Outputs:
  oDocumentName:
    Description: "Session Manager preferences document"
    Value: SSM-SessionManagerRunShell
  oSessionManagerLogsBucket:
    Description: S3 bucket having all the session manager logs
    Value: !Ref rSessionManagerLogsBucket
    Export:
      Name: rSessionManagerLogsBucket
