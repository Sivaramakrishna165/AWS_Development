---
AWSTemplateFormatVersion: 2010-09-09
Description: 'A regional template, Deregisters Amis and delete the ami snapshots based on the DeleteOn tag value'
Parameters:
  pDXCS3BucketName:
    Type: "AWS::SSM::Parameter::Value<String>" 
    Default: /DXC/SES/Module/DeregisterAmisDeleteAmiSnapshots/S3AssetBucket
    Description: SSM Parameter for bucket location
  pDXCS3KeyPrefix:
    Type: String
    Default: 'None'
    Description: "[DO NOT CHANGE] S3 path to the Lambda_functions of Feature. To be Filled by creating/parent stack"
  pFeatureVersion:
    Type: String
    Default: 'None'
    Description: "[DO NOT CHANGE] Version of the Feature. To be Filled by creating/parent stack"  
  pDeregisterAmisCWFrequency:
    Description: '[Required] Keep 1 day. The schedule (Rate) to trigger DeregisterHardenedAmis (Change only if required)'
    Type: String
    Default: 'rate(1 day)'
    AllowedValues: [ 'rate(1 day)', 'rate(7 days)', 'rate(15 days)', 'rate(30 days)']
  pEnableDeregisterAmisDelAmiSnapsCWRule:
    Description: '[Required] By default CW rule is set to ENABLED'
    Type: String
    Default: 'ENABLED'
    AllowedValues: ['DISABLED', 'ENABLED']
  pDeleteAmiSnapshotDescription:
    Description: '[Required] Description is used to filter the Offerings AMI snapshots'
    Type: String
    Default: '*Created by CreateImage*, *PatchingAutomation*'
  
Resources:
  rDeleteAmiSnapshotDescription:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: /DXC/DeregisterAmisDeleteAmiSnapshot/AmiSnapshotDesc
      Description: "Description used to filter the AMI snapshots"
      Type: "String"
      Value: !Ref pDeleteAmiSnapshotDescription

  rDxcmsDeregisterHardenedAmisEventsRule:
    Type: AWS::Events::Rule
    Properties:
      Name: AWSMS-DeregisterAmisDeleteSnapshots
      Description: 'Event that triggers dxcms-deregister-hardened-amis lambda to delete teh hardened amis and ami snapshots in the region'
      ScheduleExpression: !Sub '${pDeregisterAmisCWFrequency}'
      State: !Ref pEnableDeregisterAmisDelAmiSnapsCWRule
      Targets:
        -
          Arn:
            Fn::GetAtt:
              - "rDxcmsDeregisterAmisDelSnapsLambda"
              - "Arn"
          Id: "DeregisterAmisDelSnapshots"
          Input: "{\"RequestType\": \"DeregisterAmisDeleteSnapshots\"}"
    
  rDxcmsDeregisterAmisDelSnapsLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: "rDxcmsDeregisterAmisDelSnapsLambda"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "rDxcmsDeregisterHardenedAmisEventsRule"
          - "Arn"

  rDxcmsDeregisterAmisLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Tags:
      - Key: Application
        Value: !Ref 'AWS::StackName'
      - Key: Name
        Value: rDxcmsDeregisterAmisLambdaRole
      - Key: Owner
        Value: DXC
      Policies:
        - PolicyName: !Join ["-", ["DxcmsDeregisterHardenedAmisPerms", !Ref "AWS::Region"]]
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:DescribeLogGroups
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/dxcms-deregister-amis-delete-ami-snapshots:*"
              - Effect: Allow
                Action:
                  - ec2:CreateTags
                  - ec2:CreateTags
                  - ec2:DescribeImages
                  - ec2:DescribeSnapshots
                  - ec2:DeregisterImage
                  - ec2:DeleteSnapshot
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - "ssm:GetParameter"
                Resource: 
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/DXC/DeregisterAmisDeleteAmiSnapshot/AmiSnapshotDesc"

  rDxcmsDeregisterAmisDelSnapsLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: "dxcms-deregister-amis-delete-ami-snapshots"
      Description: 'Lambda to deregister Amis and delete ami snapshots'
      Runtime: python3.11
      Handler: dxcms_deregister_amis_delete_ami_snapshots.lambda_handler
      MemorySize: 128
      Role: !GetAtt rDxcmsDeregisterAmisLambdaRole.Arn
      Timeout: 900
      Environment:
        Variables:
          ssmDeleteAmiSnapshotDescription: !Ref rDeleteAmiSnapshotDescription
      Code:
        S3Bucket: !Ref pDXCS3BucketName
        S3Key: !Sub "${pDXCS3KeyPrefix}/dxcms_deregister_amis_delete_ami_snapshots.zip"
      Tags:
      - Key: Application
        Value: !Ref 'AWS::StackName'
      - Key: Name
        Value: !Sub "dxcms_deregister_amis_delete_ami_snapshots"
      - Key: Owner
        Value: DXC
