---
AWSTemplateFormatVersion: 2010-09-09

Description: DXC Managed Services - Feature which generates IAM users audit report in SNOW

Parameters:

  pFeatureVersion:
    Type: String
    Default: 'None'
    Description: "[DO NOT CHANGE] Version of the Feature. To be Filled by creating/parent stack"

  pDXCS3KeyPrefix:
    Type: String
    Default: 'None'
    Description: "[DO NOT CHANGE] S3 path to the Lambda_functions of Feature. To be Filled by creating/parent stack"

  pDXCS3BucketName:
    Type: "AWS::SSM::Parameter::Value<String>" 
    Default: /DXC/SES/Module/AuditReports/S3AssetBucket
    Description: "[DO NOT CHANGE] SSM Parameter for bucket location"

  pPlatformVersion:
    Type: "AWS::SSM::Parameter::Value<String>" 
    Default: /DXC/Main/pPlatformVersion
    Description: "[DO NOT CHANGE] SSM Parameter for platform version"

  pfAuditReportGenCron:
    Default: cron(15 3 * * ? *)
    Description: Cron exprssion to schedule, to run the audit reports
    Type: String

  pfShortDescForSNOW:
    Description: 'Short Description which will be used while creating the SNOW incident.'
    Type: String
    Default: "Audit reporting"
  
  pfAWSResources:
    Type: String
    Default: "IAM_USERS"
    Description: Resources for which report needs to be generated. Ex - IAM_USERS
                 Values must be comma separated and from the list given below 
                 Allowed Values - IAM_USERS
  
  pfSnowInciPriority:
    Type: String
    Default: '3'
    AllowedValues: ['1', '2', '3']
    Description: Priority of the incident to be created for Audit notification

  pCommonSNOWTopic:
    Description: '[DO NOT CHANGE] ssm param of Common ServiceNow Topic for service now alerts'
    Type: "AWS::SSM::Parameter::Value<String>"
    Default: "/DXC/SES/Module/CommonServicenow/ComSnowStdInputArn"

Resources:

#save the resources to be audited in parameter store
#same will be referred by lambda
#if user wants to add some more, they can edit this value directly

  rAWSResourcesForAuditParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/DXC/Audit/RESOURCES_FOR_AUDIT"
      Type: String
      Value: !Ref pfAWSResources
      Description: "Resources for which report needs to be generated" 
  
  rAuditSnowDescParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/DXC/Audit/SNOW_SHORT_DESC"
      Type: String
      Value: !Ref pfShortDescForSNOW
      Description: "Short description used while creating SNOW incident" 

  rAuditReportingSchedule:
    Type: AWS::Events::Rule
    DependsOn: rAuditReportGenLambda
    Properties:
        Description: "Scheduled Rule to generate audit report"
        ScheduleExpression: !Ref pfAuditReportGenCron
        State: ENABLED
        Targets:
          -
            Arn: !GetAtt rAuditReportGenLambda.Arn
            Id: "Verify"
  
  rAuditingLambdaPermission:
    DependsOn: rAuditReportingSchedule
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: "rAuditReportGenLambda"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "rAuditReportingSchedule"
          - "Arn"

#bucket which holds all the audit reports
  rAuditingBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: Private
      BucketEncryption:
         ServerSideEncryptionConfiguration:
         - ServerSideEncryptionByDefault:
             SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True

  rAuditReportGenLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: !Join ["-", ["auditReportGeneration",!Ref "AWS::AccountId", !Ref "AWS::Region"]]
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:DescribeLogGroups
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:PutRetentionPolicy
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/dxc-awsms-auditReportGeneration*'
              
              - Effect: Allow
                Action: 
                  - dynamodb:Query
                  - dynamodb:Get*
                  - dynamodb:Scan
                  - dynamodb:BatchGetItem
                Resource: 
                  - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/AccountFeatureDefinitions*'
                  
              - Effect: Allow
                Action: 
                  - s3:PutObject
                Resource: 
                  - !Sub arn:aws:s3:::${rAuditingBucket}
                  - !Sub arn:aws:s3:::${rAuditingBucket}/*

              - Effect: Allow
                Action: 
                  - iam:ListUsers
                  - iam:GetAccessKeyLastUsed
                  - iam:GetUser     
                  - iam:ListAccessKeys
                  - SNS:Publish
                Resource: '*'
              - Effect: Allow
                Action: 
                  - ssm:GetParametersByPath
                  - ssm:GetParameter
                  - ssm:GetParameters  
                Resource: '*'
      Tags:
      - Key: Application
        Value: !Ref 'AWS::StackName'
      - Key: Name
        Value: "rAuditReportGenLambdaRole"
      - Key: Owner
        Value: DXC
      - Key: Purpose
        Value: "audit_report_generation"

  # Primary detections handling lambda
  rAuditReportGenLambda:
    Type: AWS::Lambda::Function
    Description: "Generates audit report for the selected AWS Resources"
    Properties:
      FunctionName: 'dxc-awsms-auditReportGeneration'
      Code:
        S3Bucket: !Ref pDXCS3BucketName
        S3Key: !Sub "${pDXCS3KeyPrefix}/audit_report_generation_lambda.zip" 
      Environment:
        Variables:
          AUDIT_BUCKET : !Ref rAuditingBucket
          SNOW_DESC_PARAM : !Ref rAuditSnowDescParam
          RESOURCES_DET_PARAM : !Ref rAWSResourcesForAuditParam
          SNOW_TOPIC : !Ref pCommonSNOWTopic
      Handler: main.lambda_handler
      MemorySize: 128
      Role: !GetAtt rAuditReportGenLambdaRole.Arn
      Runtime: python3.11
      Timeout: 300
      Tags:
        - Key: Owner
          Value: DXC
        - Key: Purpose
          Value: "audit_report_generation"

Outputs:
  AuditBucket:
    Description: Bucket used to store the audit files
    Value: !Ref rAuditingBucket            
