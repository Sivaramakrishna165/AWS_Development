AWSTemplateFormatVersion: "2010-09-09"

Description: " This feature creates an AWS managed Mainframe Modernization runtime environment"

Parameters:
  pUpdateHash:
    Default: 0
    Description: This hash initiates updates to the dxcms-CreateM2EnvLambda lambda
      This parameter is only used during an updating of the stack and must be changed to a different value.
      During updating of the stack, this parameter MUST be changed to trigger an update.
    Type: String
  pDXCS3BucketName:
    Type: "AWS::SSM::Parameter::Value<String>" 
    Default: "/DXC/SES/Module/M2RunEnv/S3AssetBucket"
    Description: "SSM Parameter for bucket location"
  pDXCS3KeyPrefix:
    Type: String
    Default: 'None'
    Description: "[DO NOT CHANGE] S3 path to the Lambda_functions of Feature. To be Filled by creating/parent stack"
  pFeatureVersion:
    Type: String
    Default: 'None'
    Description: "[DO NOT CHANGE] Version of the Feature. To be Filled by creating/parent stack"
  ## Parameters for DynamoDB, duplicated in definition file
  pSESLayerArn:
    Type : 'AWS::SSM::Parameter::Value<String>'
    Default: /DXC/SES/SESLayerLambdaArn
  pM2EnvSuffix:
    Type : String
    Default: '1'
  pM2EnvName:
    Description: 'M2 environment name with no spaces'
    Type : String
    Default: 'M2-env-1'
  pM2EnvId:
    Description: 'The unique identifier of the runtime environment, updated during M2 env creation'
    Type: String
    Default: 'Dummy'
  pM2EnvDescription:
    Description: 'M2 environment description'
    Type : String
    Default: 'M2 env 1'
  pFindSubnets:
    Description: 'If True, a lambda will be invoked to get the WorkloadVPC v2 private sunbetIds'
    Type: String
    Default: True
  pCreateEfs:
    Description: 'Default is False. Must deploy feature elastic file system prior to m2_run_env. Currently required for application monitoring. Must also populate pEfsId with a pre-existing EFSId'
    Type: String
    Default: False
  pM2EnvSubnet1:
    Description: 'One of two subnets required for M2 environment creation. Workload VPC v2 private subnets will be used unless overridden in Account Feature Definition table'
    Type: String
    Default: 'Dummy1'
  pM2EnvSubnet2:
    Description: 'One of two subnets required for M2 environment creation. Workload VPC v2 private subnets will be used unless overridden in Account Feature Definition table'
    Type: String
    Default: 'Dummy2'
  pM2EngineType:
    Description: 'Select the desired runtime engine: microfocus for replatforming or bluage for refactoring'
    Type: String
    Default: 'microfocus'
    AllowedValues: ['microfocus', 'bluage']
  pHighAvailabilityConfig:
    Description: 'One of two subnets required for M2 environment creation. Workload VPC v2 private subnets will be used unless overridden in Account Feature Definition table'
    Type: String
    Default: '1'
    AllowedValues: ['1', '2', '3'] 
  pInstanceType:
    Description: 'Instance type for the AWM managed service: Mainframe Modernization. WARNING review pricing before changing: https://aws.amazon.com/mainframe-modernization/pricing/?nc=sn&loc=3'
    Type: String
    Default: 'M2.m5.large'
    AllowedValues: ['M2.m5.large', 'M2.c5.large', 'M2.m6i.large', 'M2.m6i.xlarge', 'M2.m6i.2xlarge', 'M2.c6i.large', 'M2.c6i.xlarge', 'M2.c6i.2xlarge', 'M2.r6i.large', 'M2.r6i.xlarge', 'M2.r6i.2xlarge', 'M2.r6i.4xlarge', 'M2.r5b.large', 'M2.r5b.xlarge', 'M2.r5b.2xlarge']
  pPublicAccess:
    Description: 'DO NOT CHANGE, public access is set to False by default'
    Type: String
    Default: False
  pSecurityGroupIds:
    Description: 'Enter the Security Group Ids created from feature Elastic File System and any other non WorkloadVPC v2 SGs required for the m2 runtime environment. Each SG should be enclosed in single quotes, separated by commas, enclosed in brackets to create a list. In DynamoDB do not enclose the list in double quotes.' # Ex: ['sg-0123', 'sg-4567']
    Type: String
    Default: 'Dummy'
  pM2Tags:
    Description: 'Tags applied to the M2 environment'
    Type: String
    Default: "{ 'Owner': 'DXC', 'Name': 'm2_run_env' }"
  pEfsId:
    Description: 'The unique identifier of the Elastic File System, updated during EFS creation'
    Type: String
    Default: 'Dummy'
  pEfsPerformanceMode:
    Description: 'The performance mode of the file system.  maxIO has higher latencies.  Cannot be changed one the filesystem is created'
    Type: String
    Default: 'generalPurpose'
    AllowedValues: ['generalPurpose', 'maxIO']
  pEfsEncryption:
    Description: 'DO NOT CHANGE, Setting to True will use the default KMS key for Amazon EFS to encrypt the filesystem.'
    Type: String
    Default: True
  pEfsThroughputMode:
    Description: 'Set to bursting by default for lowest cost with unknown workload traffic'
    Type: String
    Default: 'bursting'
    AllowedValues: ['bursting', 'provisioned']
  pEfsProvisionedThroughputInMibps:
    Description: "Not used for bursting throughput mode. The throughput, measured in MiB/s, that you want to provision for a file system that you're creating. Valid values are 1-1024"
    Type: Number
    Default: 1
  pEfsBackup:
    Description: 'Set to False by default.  EFS uses 3 regions for durability and availability. AWS Backup for EFS is not available in every region'
    Type: String
    Default: False
  pEfsTagList:
    Description: 'list containing JSON key-value pairs specifying the tags to be applied to EFS'
    Type: CommaDelimitedList
    Default: "{ 'Key': 'Owner', 'Value': 'DXC' } "
  pEfsMountPoint:
    Description: 'The mount point for the EFS File System'
    Type: String
    Default: '/m2/mount/dxc'
#  Preferred maintenance window is constructed from four parameters to work around SES processing failure of the required syntax wed:03:27-wed:05:27
  pPrefMaintWinDay:
    Description: 'Preferred day of the week for the maintenance window'
    Type: String
    Default: 'sat'
  pPrefMaintWinHrStart:
    Description: 'Preferred starting hour of the day for the maintenance window'
    Type: String
    Default: '03'
  pPrefMaintWinHrStop:
    Description: 'Preferred starting hour of the day for the maintenance window'
    Type: String
    Default: '05'
  pPrefMaintWinMin:
    Description: 'Preferred minute of the associated hour for the maintenance window'
    Type: String
    Default: '27'
  pUpdateEnvEngVer:
    Description: 'The version of the runtime engine for the environment. If not changing, then specify the current engine version'
    Type: String
    Default: 'Dummy'
  pUpdateInstanceTypeFlag:
    Description: 'Change to true along with pInstanceType to change the instance type via ses-standards-master stack update'
    Type: String
    Default: False
  pUpdateEngineVersionFlag:
    Description: 'Change to true along with pUpdateEnvEngVer to change the M2 environment engine version via ses-standards-master stack update'
    Type: String
    Default: False
  pUpdateDesiredCapacityFlag:
    Description: 'Change to true along with pHighAvailabilityConfig to update the desired capacity of the M2 environment via ses-standards-master stack update'
    Type: String
    Default: False
  pUpdatePrefMaintWinFlag:
    Description: 'Change to true along with pPrefMaintWinDay, pPrefMaintWinHrStart, pPrefMaintWinHrStop, pPrefMaintWinMin to update the maintenance window of the M2 environment via ses-standards-master stack update'
    Type: String
    Default: False

Mappings: 
  RegionMap: 
    us-east-1:
      ValidM2Region: True
    us-east-2:
      ValidM2Region: True
    us-west-1:
      ValidM2Region: True
    us-west-2:
      ValidM2Region: True
    ap-south-1:
      ValidM2Region: True
    ap-northeast-2:
      ValidM2Region: True
    ap-southeast-1:
      ValidM2Region: True
    ap-southeast-2:
      ValidM2Region: True
    ap-northeast-1:
      ValidM2Region: True
    ap-northeast-3:
      ValidM2Region: True
    ca-central-1:
      ValidM2Region: True
    eu-central-1:
      ValidM2Region: True
    eu-west-1:
      ValidM2Region: True
    eu-west-2:
      ValidM2Region: True
    eu-west-3:
      ValidM2Region: True
    eu-north-1:
      ValidM2Region: True
    eu-south-1:
      ValidM2Region: True
    sa-east-1:
      ValidM2Region: True
    me-south-1:
      ValidM2Region: False

Conditions:
  SupportedRegion: !Equals 
    - !FindInMap [RegionMap, !Ref "AWS::Region", ValidM2Region]
    - True
  NonSupportedRegion: !Equals 
    - !FindInMap [RegionMap, !Ref "AWS::Region", ValidM2Region]
    - False


# supported regions ['us-east-1', 'us-east-2', 'us-west-1', 'us-west-2', 'ap-southeast-2', 'ca-central-1', 'eu-central-1', 'eu-west-1', 'sa-east-1', 'ap-south-1', 'ap-southeast-1', 'ap-northeast-1', 'eu-west-2', 'eu-west-3', 'ap-northeast-3', 'eu-north-1', 'eu-south-1']


Resources:

  rCreateM2EnvLambda:
    Type: AWS::Lambda::Function
    Condition: SupportedRegion 
    Properties:
      FunctionName: !Sub "dxcms-CreateM2EnvLambda-${AWS::Region}-${pM2EnvSuffix}"
      Environment:
        Variables:
          Aws_Region: !Sub '${AWS::Region}'
          Aws_Account: !Sub '${AWS::AccountId}'
      Description: 'Create an AWS managed Mainframe Modernization runtime environment'
      Runtime: python3.11
      Layers:
        - !Ref pSESLayerArn
      Handler: m2_run_env.lambda_handler
      MemorySize: 128
      Role: !GetAtt rCreateM2EnvLambdaRole.Arn
      Timeout: 540 
      Code:
        S3Bucket: !Ref pDXCS3BucketName
        S3Key: !Sub "${pDXCS3KeyPrefix}/m2_run_env.zip"

  rCreateM2EnvLambdaRole:
    Type: AWS::IAM::Role
    Condition: SupportedRegion 
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Join ["-", ["CreateM2EnvLambda", !Ref "AWS::Region"]]
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:DescribeLogGroups
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/dxcms-CreateM2EnvLambda-${AWS::Region}*"
              - Effect: Allow
                Action:
                  - ec2:DescribeSubnets
                Resource:
                  #- !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/subnet-*"
                  - "*"
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                Resource:
                  - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/AccountFeatureDefinitions"
              - Effect: Allow
                Action:
                  - m2:ListEnvironments
                  - m2:GetEnvironment
                  - m2:CreateEnvironment
                  - m2:UpdateEnvironment
                  - m2:DeleteEnvironment
                  - ec2:CreateNetworkInterface
                  - ec2:CreateNetworkInterfacePermission
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeSubnets
                  - ec2:DescribeVpcAttribute
                  - ec2:DescribeVpcs
                  - ec2:ModifyNetworkInterfaceAttribute
                  - elasticfilesystem:DescribeMountTargets
                  - elasticfilesystem:CreateFileSystem
                  - elasticfilesystem:DescribeFileSystems
                  - elasticfilesystem:CreateMountTarget
                  - elasticfilesystem:DeleteFileSystem
                  - elasticloadbalancing:CreateLoadBalancer
                  - elasticloadbalancing:AddTags
                  - elasticloadbalancing:CreateListener
                  - elasticloadbalancing:CreateTargetGroup
                  - elasticloadbalancing:RegisterTargets
                  - elasticloadbalancing:DeleteListener
                  - elasticloadbalancing:DeleteTargetGroup
                  - elasticloadbalancing:DeleteLoadBalancer
                  - fsx:DescribeFileSystems
                  - iam:CreateServiceLinkedRole
                Resource:
                  #- !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:dxcms-CreateM2EnvLambda*"
                  - "*"
              - Effect: Allow
                Action:
                  - m2:TagResource
                Resource:
                  - !Sub "arn:aws:m2:${AWS::Region}:${AWS::AccountId}*"

  rInvokeCreateM2EnvLambda:
    Type: "Custom::CreateM2EnvLambda"
    Condition: SupportedRegion 
    #DependsOn: rCreateM2EnvLambda
    Properties:
      ServiceToken: !Sub "${rCreateM2EnvLambda.Arn}"
      pUpdateHash: !Ref pUpdateHash


  rNonSupM2RegLambda:
    Type: AWS::Lambda::Function
    Condition: NonSupportedRegion 
    Properties:
      FunctionName: !Sub "dxcms-NonSupM2RegLambda-${AWS::Region}-${pM2EnvSuffix}"
      Description: 'Fail stack creation if deploying into an M2 unsupported region'
      Runtime: python3.11
      Handler: non_sup_m2_reg.lambda_handler
      MemorySize: 128
      Role: !GetAtt rNonSupM2RegLambdaRole.Arn
      Timeout: 30 
      Code:
        S3Bucket: !Ref pDXCS3BucketName
        S3Key: !Sub "${pDXCS3KeyPrefix}/non_sup_m2_reg.zip"

  rNonSupM2RegLambdaRole:
    Type: AWS::IAM::Role
    Condition: NonSupportedRegion 
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Join ["-", ["NonSupM2RegLambda", !Ref "AWS::Region"]]
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:DescribeLogGroups
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/dxcms-NonSupM2RegLambda-${AWS::Region}*"

  rInvokeNonSupM2RegLambda:
    Type: "Custom::NonSupM2RegLambda"
    Condition: NonSupportedRegion 
    Properties:
      ServiceToken: !Sub "${rNonSupM2RegLambda.Arn}"
